(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{252:function(a,n,s){"use strict";s.r(n);var t=s(2),e=Object(t.a)({},function(){var a=this,n=a.$createElement,s=a._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"优雅的环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优雅的环境","aria-hidden":"true"}},[a._v("#")]),a._v(" 优雅的环境 "),s("Badge",{attrs:{text:"强烈推荐"}})],1),a._v(" "),s("p",[a._v("在学习的过程中，接触到"),s("code",[a._v("Anaconda")]),a._v("。Anaconda是一个方便的python包管理和环境管理软件，一般用来配置不同的项目环境。我们常常会遇到这样的情况，正在做的项目A和项目B分别基于python2和python3，而第电脑只能安装一个环境，这个时候Anaconda就派上了用场，它可以创建多个互不干扰的环境，分别运行不同版本的软件包，以达到兼容的目的。Anaconda通过管理工具包、开发环境、Python版本，大大简化了你的工作流程。不仅可以方便地安装、更新、卸载工具包，而且安装时能自动安装相应的依赖包，同时还能使用不同的虚拟环境隔离不同要求的项目。"),s("br"),a._v("\n话不多说，我们开始实践一下。")]),a._v(" "),s("h2",{attrs:{id:"下载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载","aria-hidden":"true"}},[a._v("#")]),a._v(" 下载")]),a._v(" "),s("p",[a._v("我们去到"),s("a",{attrs:{href:"https://www.anaconda.com/distribution/",target:"_blank",rel:"noopener noreferrer"}},[a._v("官网下载页"),s("OutboundLink")],1),a._v("，选择Python3.x版本，这里下载的是Anaconda完整版，包含了conda、Python等180多个科学包及其依赖项。因为包含了大量的科学包，Anaconda 的下载文件比较大（约 531 MB），如果只需要某些包，或者需要节省带宽或存储空间，也可以使用"),s("a",{attrs:{href:"https://docs.conda.io/en/latest/miniconda.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Miniconda"),s("OutboundLink")],1),a._v("这个较小的发行版（仅包含conda和 Python）")]),a._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),s("p",[a._v("一路默认安装即可，不过建议勾选以下选项")]),a._v(" "),s("ul",[s("li",[a._v("第一项指将Anaconda的默认环境设置添加到系统环境，也就是说如果你之前安装过python并添加到了环境，选了这一项之后原来的python会被覆盖掉，默认使用Anaconda的默认环境。")]),a._v(" "),s("li",[a._v("第二项指设置Anaconda的默认环境为python3.7.\n"),s("img",{attrs:{src:"http://qiniu.84dd.xyz/python/conda_add_path.png!84dd",alt:"conda"}})])]),a._v(" "),s("blockquote",[s("p",[a._v("安装完成后Anaconda会创建一个叫base的默认环境，如果你不切换到其他指定环境，就会一直在默认环境运行。")])]),a._v(" "),s("h2",{attrs:{id:"查看"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("python -V\n# Python 3.7.4\n\npip -V\n# pip 19.1.1 from /Users/lym/miniconda3/lib/python3.7/site-packages/pip (python 3.7)\n\nconda -V\n# conda 4.7.10\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("h2",{attrs:{id:"pip-conda"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pip-conda","aria-hidden":"true"}},[a._v("#")]),a._v(" pip && conda")]),a._v(" "),s("p",[s("img",{attrs:{src:"http://qiniu.84dd.xyz/python/pip_conda.webp!84dd",alt:"pip_conda"}})]),a._v(" "),s("h3",{attrs:{id:"pip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pip","aria-hidden":"true"}},[a._v("#")]),a._v(" pip")]),a._v(" "),s("ul",[s("li",[a._v("仅Python包。")]),a._v(" "),s("li",[a._v("编译源码中的所有内容。 编辑：点子现在安装二进制轮子，如果它们可用。")]),a._v(" "),s("li",[a._v("由核心Python社区所支持（即，Python 3.4+包含可自动增强pip的代码）。")])]),a._v(" "),s("h3",{attrs:{id:"conda"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conda","aria-hidden":"true"}},[a._v("#")]),a._v(" conda")]),a._v(" "),s("ul",[s("li",[a._v("Python不可知论者。 现有软件包的主要重点是Python，而conda本身是用Python编写的，但你也可以为C库或R软件包或任何其他软件包提供conda软件包。")]),a._v(" "),s("li",[a._v("安装二进制文件。 有一个名为conda build的工具，它可以从源代码构建软件包，但conda install本身会安装已经构建的conda软件包中的东西。")]),a._v(" "),s("li",[a._v("外部。 Conda是Anaconda的包管理器，由Continuum Analytics提供的Python发行版，但它也可以在Anaconda之外使用。 您可以使用现有的Python安装，通过pip安装它（尽管除非您有充分理由使用现有安装，否则不建议这样做）。")])]),a._v(" "),s("h3",{attrs:{id:"在这两种情况下："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在这两种情况下：","aria-hidden":"true"}},[a._v("#")]),a._v(" 在这两种情况下：")]),a._v(" "),s("ul",[s("li",[a._v("用Python编写")]),a._v(" "),s("li",[a._v("开源（conda是BSD，pip是MIT）\nconda的前两个要点实际上是使许多软件包比pip更具优势。 由于pip是从源代码安装的，所以如果你无法编译源代码，那么安装它可能会很痛苦（这在Windows上尤其如此，但如果软件包有一些困难的C或FORTRAN库，甚至在Linux上也是如此）依赖）。 Conda从二进制文件安装，这意味着有人（例如Continuum）已经完成了编译软件包的艰苦工作，因此安装非常简单。\n如果您有兴趣构建自己的软件包，也有一些差异。 例如，pip建立在setuptools之上，而conda使用它自己的格式，这有一些优点（比如静态，而且Python不可知）")])]),a._v(" "),s("blockquote",[s("p",[a._v("pip 与 conda的对比内容来源于网上")])]),a._v(" "),s("h2",{attrs:{id:"更改源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更改源","aria-hidden":"true"}},[a._v("#")]),a._v(" 更改源")]),a._v(" "),s("p",[a._v("conda默认源可能速度比较慢，可以添加其他源，常用的有清华TUNA")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在包后面显示来源")]),a._v("\nconda config --set show_channel_urls "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("yes")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h2",{attrs:{id:"anaconda环境管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#anaconda环境管理","aria-hidden":"true"}},[a._v("#")]),a._v(" Anaconda环境管理")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看所有环境（默认只有一个base）")]),a._v("\nconda "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("env")]),a._v(" list\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或者")]),a._v("\nconda info --envs\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建环境")]),a._v("\nconda create --name your_env_name\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 例子  要指定特殊版本号加上=版本号就行，默认是最新的")]),a._v("\nconda create -n your_env_name "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("python")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.5")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果你要指定多个包 可以用")]),a._v("\nconda create -n your_env_name "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("python")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.5")]),a._v(" numpy pandas\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 安装前为了保障你查询到最新包情况，最好使用 conda update --all 更新包信息")]),a._v("\nconda update --all\nconda create -n learningpy "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("python")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.5")]),a._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 切换环境")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# windows")]),a._v("\nactivate 环境名\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# linux和mac用户的命令不一样")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" activate 环境名\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或者")]),a._v("\nconda activate 环境名\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 切换回默认环境")]),a._v("\nconda activate base\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或者")]),a._v("\nconda deactivate\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建一个新环境想克隆一部分旧的环境")]),a._v("\nconda create -n your_env_name --clone oldname\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除环境")]),a._v("\nconda remove -n flowers --all\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 导出环境 ")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 若导出base环境，则在目标机上会提示已存在（而且base环境无法删除）。所以要想导出base，最好先复制一下，再导出复制品")]),a._v("\nconda "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("env")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" py35.yaml\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 导入环境")]),a._v("\nconda "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("env")]),a._v(" create -f py35.yaml\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br"),s("span",{staticClass:"line-number"},[a._v("32")]),s("br"),s("span",{staticClass:"line-number"},[a._v("33")]),s("br"),s("span",{staticClass:"line-number"},[a._v("34")]),s("br"),s("span",{staticClass:"line-number"},[a._v("35")]),s("br"),s("span",{staticClass:"line-number"},[a._v("36")]),s("br"),s("span",{staticClass:"line-number"},[a._v("37")]),s("br"),s("span",{staticClass:"line-number"},[a._v("38")]),s("br"),s("span",{staticClass:"line-number"},[a._v("39")]),s("br"),s("span",{staticClass:"line-number"},[a._v("40")]),s("br"),s("span",{staticClass:"line-number"},[a._v("41")]),s("br"),s("span",{staticClass:"line-number"},[a._v("42")]),s("br"),s("span",{staticClass:"line-number"},[a._v("43")]),s("br"),s("span",{staticClass:"line-number"},[a._v("44")]),s("br"),s("span",{staticClass:"line-number"},[a._v("45")]),s("br"),s("span",{staticClass:"line-number"},[a._v("46")]),s("br")])]),s("h2",{attrs:{id:"常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用命令","aria-hidden":"true"}},[a._v("#")]),a._v(" 常用命令")]),a._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列举当前环境下的所有包")]),a._v("\nconda list\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列举某个特定名称包")]),a._v("\nconda list -n packagename\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 为当前环境安装某包")]),a._v("\nconda "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" packagename\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 为某环境安装某包")]),a._v("\nconda "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -n envname packagename\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 搜索某包")]),a._v("\nconda search packagename\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 更新当前环境某包")]),a._v("\nconda updata packagename\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 更新某特定环境某包")]),a._v("\nconda update -n envname packagename\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除当前环境某包")]),a._v("\nconda remove packagename\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除某环境环境某包")]),a._v("\nconda remove -n envname packagename\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br")])])])},[],!1,null,null,null);n.default=e.exports}}]);